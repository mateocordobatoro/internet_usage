abline(h = 4/(length(residuals(vif_model))), col = "red") # Umbral común
which(cooksd > 4/(length(residuals(vif_model))))
cooksd <- cooks.distance(vif_model)
plot(cooksd, type = "h")
abline(h = 4/(length(residuals(vif_model))), col = "red") # Umbral común
influential_points <- which(cooksd > 4/(length(residuals(vif_model))))
data[-influential_points,]
data_clean <- data[-influential_points,]
model3 <- lm(Tiempo ~ . data = data_clean)
data_clean <- data[-influential_points,]
model3 <- lm(Tiempo ~ . ,data = data_clean)
summary(model3)
check_normality(model3)
data_log <- data %>% mutate(ln_t = log(Tiempo)) %>% select(-c('Tiempo'))
data_log <- data %>% mutate(ln_t = log(Tiempo)) %>% select(-('Tiempo'))
data_log <- data %>% mutate(ln_t = log(Tiempo)) %>% select(-Tiempo)
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,-c('Tiempo')]
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,!c('Tiempo')]
data_log <- data %>% mutate(ln_t = log(Tiempo)) %>% select(-Tiempo)
data %>% mutate(ln_t = log(Tiempo))
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,names(data_log) != "Tiempo"]
cor_matrix2 <- cor(data_log)
corrplot(cor_matrix2, method="number", type="lower")
# Variance Inflation Factor (VIF)
vif_model2 <- lm(Tiempo ~ ., data = data_log) # Replace 'y' with your dependent variable
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,names(data_log) != "Tiempo"]
cor_matrix2 <- cor(data_log)
corrplot(cor_matrix2, method="number", type="lower")
# Variance Inflation Factor (VIF)
vif_model2 <- lm(ln_t ~ ., data = data_log) # Replace 'y' with your dependent variable
vif_values2 <- car::vif(vif_model2)
print(vif_values)
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,names(data_log) != "Tiempo"]
cor_matrix2 <- cor(data_log)
corrplot(cor_matrix2, method="number", type="lower")
# Variance Inflation Factor (VIF)
vif_model2 <- lm(ln_t ~ ., data = data_log) # Replace 'y' with your dependent variable
vif_values2 <- car::vif(vif_model2)
print(vif_values2)
cooksd2 <- cooks.distance(vif_model2)
plot(cooksd2, type = "h")
abline(h = 4/(length(residuals(vif_model2))), col = "red") # Umbral común
influential_points2 <- which(cooksd2 > 4/(length(residuals(vif_model2))))
data_log_clean <- data[-influential_points2,]
model_log_clean <- lm(ln__t ~., data = data_log_clean)
data_log_clean <- data[-influential_points2,]
model_log_clean <- lm(ln_t ~., data = data_log_clean)
data_log_clean <- data_log[-influential_points2,]
model_log_clean <- lm(ln_t ~., data = data_log_clean)
summary(model_log_clean)
check_normality(model_log_clean)
check_homoscedasticity(model_log_clean)
check_homoscedasticity(model_log_clean, data_log_clean, 'ln_t')
library(lmtest)
library(car)
library(lmtest)
library(car)
dwtest(model_log_clean)
stepwise_regression(data_log_clean, 'ln_t')
model_final <- lm(ln_t ~ Ecog + Sexo, data = data_log_clean)
summary(model_final)
model_final <- lm(ln_t ~ Ecog + Sexo, data = data_log_clean)
summary(model_final)
check_normality(model_final)
model_final <- lm(ln_t ~ Ecog + Sexo, data = data_log_clean)
summary(model_final)
check_normality(model_final)
check_homoscedasticity(model_final, data_log_clean, 'ln_t')
summary(model_final)
names(data)
data <- read.delim("~/EspecializacionUNAL/MetodosDeRegresion/Analisis de regresion/Parcial_supuestos/Par 3 2024-2 - Datos Pulmón.txt")
View(data)
library(lmtest)
library(car)
data <- read.delim("Par 3 2024-2 - Datos Pulmón.txt")
head(data)
library(lmtest)
library(car)
library(dplyr)
source('analisis_supuestos.R')
data <- read.delim("Par 3 2024-2 - Datos Pulmón.txt")
head(data)
stepwise_regression(data, 'Tiempo')
model1 <- lm(Tiempo~ Ecog + Sexo, data = data)
check_normality(model)
model1 <- lm(Tiempo~ Ecog + Sexo, data = data)
check_normality(model1)
model1 <- lm(Tiempo ~ ., data =data)
summary(model1)
model1 <- lm(Tiempo~ Ecog + Sexo, data = data)
check_normality(model1)
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,names(data_log) != "Tiempo"]
cor_matrix2 <- cor(data_log)
corrplot(cor_matrix2, method="number", type="lower")
# Variance Inflation Factor (VIF)
vif_model2 <- lm(ln_t ~ ., data = data_log) # Replace 'y' with your dependent variable
vif_values2 <- car::vif(vif_model2)
print(vif_values2)
model_log <- lm(ln_t ~ Ecog + Sexo, data = data_log)
check_normality(model_log)
data_log <- data %>% mutate(ln_t = log(Tiempo))
data_log <- data_log[,names(data_log) != "Tiempo"]
cor_matrix2 <- cor(data_log)
corrplot(cor_matrix2, method="number", type="lower")
# Variance Inflation Factor (VIF)
vif_model2 <- lm(ln_t ~ Ecog + Sexo, data = data_log)
vif_values2 <- car::vif(vif_model2)
print(vif_values2)
cooksd2 <- cooks.distance(vif_model2)
plot(cooksd2, type = "h")
abline(h = 4/(length(residuals(vif_model2))), col = "red") # Umbral común
influential_points2 <- which(cooksd2 > 4/(length(residuals(vif_model2))))
data_log_clean <- data_log[-influential_points2,]
model_log_clean <- lm(ln_t ~., data = data_log_clean)
summary(model_log_clean)
check_normality(model_log_clean)
data_log_clean <- data_log[-influential_points2,]
model_log_clean <- lm(ln_t ~ Ecog + Sexo, data = data_log_clean)
summary(model_log_clean)
check_normality(model_log_clean)
check_homoscedasticity(model_log_clean, data_log_clean, 'ln_t')
dwtest(model_log_clean)
summary(model_log_clean)
summary(model_log_clean)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(dplyr)
library(highcharter)
library(forecast)
library(nls2)
#Load dataset
data <- read.csv("data_long.csv")
data %>%
group_by(Year) %>%
summarise(Internet_usage = mean(Internet_usage, na.rm = TRUE)) %>%
hchart('line', hcaes(x =Year, y= Internet_usage))  %>%
hc_title(text = "Average % Population Internet Access", style = list(fontFamily = "Lato", fontSize = "18px")) %>%
hc_chart(backgroundColor = "#F4F4F4") %>%
hc_xAxis(title = list(text = "Year", style = list(fontFamily = "Lato", fontSize = "14px")), lineColor = "#333333") %>%
hc_yAxis(title = list(text = "Internet Usage (%)", style = list(fontFamily = "Lato", fontSize = "14px")), gridLineColor = "#D9D9D9") %>%
hc_legend(itemStyle = list(fontFamily = "Lato", fontSize = "12px", color = "#333333")) %>%
hc_colors(c("#E31A1C","#1F78B4", "#33A02C", "#FF7F00", "#6A3D9A", "#B15928"))
decreasing_countries <- data %>%
group_by(country_name) %>%
arrange(Year) %>%
mutate(change = Internet_usage - lag(Internet_usage)) %>%
filter(change < 0) %>%
pull(country_name) %>%
unique()
decreasing_countries_count <- length(decreasing_countries)
data %>%
filter(country_name %in% (data %>%
filter(Year == 2023) %>%
arrange(desc(Internet_usage)) %>%
head(10))$country_name) %>%
hchart('line', hcaes(x= Year, y = Internet_usage, group = country_name)) %>%
hc_title(text = "Countries with Highest Internet Penetration", style = list(fontFamily = "Lato", fontSize = "18px")) %>%
hc_chart(backgroundColor = "#F4F4F4") %>%
hc_xAxis(title = list(text = "Year", style = list(fontFamily = "Lato", fontSize = "14px")), lineColor = "#333333") %>%
hc_yAxis(title = list(text = "Internet Usage (%)", style = list(fontFamily = "Lato", fontSize = "14px")), gridLineColor = "#D9D9D9") %>%
hc_legend(itemStyle = list(fontFamily = "Lato", fontSize = "12px", color = "#333333")) %>%
hc_colors(c("#E31A1C","#1F78B4", "#33A02C", "#FF7F00", "#6A3D9A", "#B15928"))
data %>%
filter(country_name %in% (data %>%
filter(Year == 2023) %>%
arrange(Internet_usage) %>%
head(10))$country_name) %>%
hchart('line', hcaes(x= Year, y = Internet_usage, group = country_name)) %>%
hc_title(text = "Countries with Lowest Internet Penetration", style = list(fontFamily = "Lato", fontSize = "18px")) %>%
hc_chart(backgroundColor = "#F4F4F4") %>%
hc_xAxis(title = list(text = "Year", style = list(fontFamily = "Lato", fontSize = "14px")), lineColor = "#333333") %>%
hc_yAxis(title = list(text = "Internet Usage (%)", style = list(fontFamily = "Lato", fontSize = "14px")), gridLineColor = "#D9D9D9") %>%
hc_legend(itemStyle = list(fontFamily = "Lato", fontSize = "12px", color = "#333333")) %>%
hc_colors(c("#E31A1C","#1F78B4", "#33A02C", "#FF7F00", "#6A3D9A", "#B15928"))
# Identify early adopter countries (those with >40% penetration in 2000)
early_adopter_countries <- data %>%
filter(Year == 2000, Internet_usage > 40) %>%
pull(country_code)
# Compute weighted internet penetration for early adopters
early_adopters <- data %>%
filter(country_code %in% early_adopter_countries) %>%
group_by(Year) %>%
summarise(
weighted_avg = sum(Internet_usage * population) / sum(population)
)
# Compute weighted internet penetration for late adopters
late_adopters <- data %>%
filter(!(country_code %in% early_adopter_countries)) %>%
group_by(Year) %>%
summarise(
weighted_avg = sum(Internet_usage * population) / sum(population)
)
# Create Highcharter visualization
highchart() %>%
hc_title(text = "Internet Penetration: Early vs. Late Adopters") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Weighted Internet Penetration (%)"), max = 100) %>%
# Early Adopters Line
hc_add_series(data = early_adopters, type = "line", hcaes(x = Year, y = weighted_avg),
name = "Early Adopters (>40% in 2000)", color = "#1F78B4") %>%
# Late Adopters Line
hc_add_series(data = late_adopters, type = "line", hcaes(x = Year, y = weighted_avg),
name = "Late Adopters (<40% in 2000)", color = "#E31A1C", dashStyle = "Dash") %>%
# Tooltip customization
hc_tooltip(shared = TRUE, valueDecimals = 2)
# Definir función logística con límite en 100%
logistic_function <- function(Year, xmid, scal) {
100 / (1 + exp(-scal * (Year - xmid)))
}
prediction_log <- function(data){
# Aggregating data to calculate global average per year
global_trend <- data %>%
rename(Internet_usage = weighted_avg)
# Encontrar valores iniciales para los parámetros
xmid_init <- median(global_trend$Year)  # Punto de inflexión en la mitad de los datos
scal_init <- 0.1  # Velocidad de crecimiento, un valor pequeño para evitar errores
# Ajustar el modelo logístico
logistic_model <- nls(Internet_usage ~ logistic_function(Year, xmid, scal),
data = global_trend,
start = list(xmid = xmid_init, scal = scal_init))
# Predecir valores futuros
future_years <- data.frame(Year = seq(min(global_trend$Year), 2060, by = 1))
future_predictions <- predict(logistic_model, newdata = future_years)
# Truncar predicciones a un máximo de 100%
future_predictions <- pmin(future_predictions, 100)
# Crear dataframe con predicciones
forecast_df <- data.frame(Year = future_years$Year, Internet_usage = future_predictions)
return(forecast_df)
}
early_pred <- prediction_log(early_adopters)
late_pred <- prediction_log(late_adopters)
early_pred <- early_pred %>% filter(Year>2023)
late_pred <- late_pred %>% filter(Year>2023)
early_adopters
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_adopters %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
hc_add_series(data = late_adopters %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
# Datos pronosticados (línea punteada)
hc_add_series(data = early_adopters %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
hc_add_series(data = late_adopters %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
# # Línea vertical donde empieza el pronóstico
# hc_add_series(data = list(list(x = min(forecast_df$Year), y = 0),
#                           list(x = min(forecast_df$Year), y = 100)),
#               type = "line", name = "Forecast Start", color = "black", dashStyle = "Dot",
#               enableMouseTracking = FALSE, marker = list(enabled = FALSE)) %>%
# Punto verde en el primer año donde se alcanza el 100%
hc_add_series(data = list(list(x = early_pred_marker_point$Year, y = early_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6)) %>%
hc_add_series(data = list(list(x = late_pred_marker_point$Year, y = late_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6))
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_pred %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
hc_add_series(data = late_pred %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
# Datos pronosticados (línea punteada)
hc_add_series(data = early_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
hc_add_series(data = late_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
# # Línea vertical donde empieza el pronóstico
# hc_add_series(data = list(list(x = min(forecast_df$Year), y = 0),
#                           list(x = min(forecast_df$Year), y = 100)),
#               type = "line", name = "Forecast Start", color = "black", dashStyle = "Dot",
#               enableMouseTracking = FALSE, marker = list(enabled = FALSE)) %>%
# Punto verde en el primer año donde se alcanza el 100%
hc_add_series(data = list(list(x = early_pred_marker_point$Year, y = early_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6)) %>%
hc_add_series(data = list(list(x = late_pred_marker_point$Year, y = late_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6))
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_pred %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
hc_add_series(data = late_pred %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4")
early_pred %>% filter(Year <= 2023)
# Definir función logística con límite en 100%
logistic_function <- function(Year, xmid, scal) {
100 / (1 + exp(-scal * (Year - xmid)))
}
prediction_log <- function(data){
# Aggregating data to calculate global average per year
global_trend <- data %>%
rename(Internet_usage = weighted_avg)
# Encontrar valores iniciales para los parámetros
xmid_init <- median(global_trend$Year)  # Punto de inflexión en la mitad de los datos
scal_init <- 0.1  # Velocidad de crecimiento, un valor pequeño para evitar errores
# Ajustar el modelo logístico
logistic_model <- nls(Internet_usage ~ logistic_function(Year, xmid, scal),
data = global_trend,
start = list(xmid = xmid_init, scal = scal_init))
# Predecir valores futuros
future_years <- data.frame(Year = seq(min(global_trend$Year), 2060, by = 1))
future_predictions <- predict(logistic_model, newdata = future_years)
# Truncar predicciones a un máximo de 100%
future_predictions <- pmin(future_predictions, 100)
# Crear dataframe con predicciones
forecast_df <- data.frame(Year = future_years$Year, Internet_usage = future_predictions)
return(forecast_df)
}
early_pred <- prediction_log(early_adopters)
late_pred <- prediction_log(late_adopters)
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_pred %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
hc_add_series(data = late_pred %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4")
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_adopters %>% rename(Internet_usage = weighted_avg), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
hc_add_series(data = late_adopters %>% rename(Internet_usage = weighted_avg) %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4")
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_adopters %>% rename(Internet_usage = weighted_avg), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
hc_add_series(data = late_adopters %>% rename(Internet_usage = weighted_avg) %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data", color = "#1F78B4") %>%
# Datos pronosticados (línea punteada)
hc_add_series(data = early_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
hc_add_series(data = late_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
# # Línea vertical donde empieza el pronóstico
# hc_add_series(data = list(list(x = min(forecast_df$Year), y = 0),
#                           list(x = min(forecast_df$Year), y = 100)),
#               type = "line", name = "Forecast Start", color = "black", dashStyle = "Dot",
#               enableMouseTracking = FALSE, marker = list(enabled = FALSE)) %>%
# Punto verde en el primer año donde se alcanza el 100%
hc_add_series(data = list(list(x = early_pred_marker_point$Year, y = early_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6)) %>%
hc_add_series(data = list(list(x = late_pred_marker_point$Year, y = late_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6))
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_adopters %>% rename(Internet_usage = weighted_avg), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data early adopters", color = "#1F78B4") %>%
hc_add_series(data = late_adopters %>% rename(Internet_usage = weighted_avg) %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data late adopters", color = "#1F78B4") %>%
# Datos pronosticados (línea punteada)
hc_add_series(data = early_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
hc_add_series(data = late_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
# # Línea vertical donde empieza el pronóstico
# hc_add_series(data = list(list(x = min(forecast_df$Year), y = 0),
#                           list(x = min(forecast_df$Year), y = 100)),
#               type = "line", name = "Forecast Start", color = "black", dashStyle = "Dot",
#               enableMouseTracking = FALSE, marker = list(enabled = FALSE)) %>%
# Punto verde en el primer año donde se alcanza el 100%
hc_add_series(data = list(list(x = early_pred_marker_point$Year, y = early_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6)) %>%
hc_add_series(data = list(list(x = late_pred_marker_point$Year, y = late_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access", color = "green",
marker = list(symbol = "circle", radius = 6))
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_adopters %>% rename(Internet_usage = weighted_avg), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data early adopters", color = "#1F78B4") %>%
hc_add_series(data = late_adopters %>% rename(Internet_usage = weighted_avg) %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data late adopters", color = "#1F78B4") %>%
# Datos pronosticados (línea punteada)
hc_add_series(data = early_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
hc_add_series(data = late_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast", dashStyle = "Dash", color = "#E31A1C") %>%
# # Línea vertical donde empieza el pronóstico
# hc_add_series(data = list(list(x = min(forecast_df$Year), y = 0),
#                           list(x = min(forecast_df$Year), y = 100)),
#               type = "line", name = "Forecast Start", color = "black", dashStyle = "Dot",
#               enableMouseTracking = FALSE, marker = list(enabled = FALSE)) %>%
# Punto verde en el primer año donde se alcanza el 100%
hc_add_series(data = list(list(x = early_pred_marker_point$Year, y = early_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access - early adopters", color = "green",
marker = list(symbol = "circle", radius = 6)) %>%
hc_add_series(data = list(list(x = late_pred_marker_point$Year, y = late_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access - late adopters", color = "darkgreen",
marker = list(symbol = "circle", radius = 6))
# Encontrar el primer año donde la penetración llega al 100%
early_pred_year_100 <- min(early_pred$Year[early_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
late_pred_year_100  <- min(late_pred$Year[late_pred$Internet_usage >= 99.5]) # 99.5% para mayor estabilidad
# Crear marcador en el punto donde se alcanza el 100%
early_pred_marker_point <- early_pred %>% filter(Year == early_pred_year_100)
late_pred_marker_point <- late_pred  %>% filter(Year == late_pred_year_100)
# Graficar en Highcharter
highchart() %>%
hc_title(text = "Forecast of Global Internet Penetration (Logistic Growth)") %>%
hc_xAxis(title = list(text = "Year")) %>%
hc_yAxis(title = list(text = "Internet Usage (%)"), max = 100) %>%
# Datos observados
hc_add_series(data = early_adopters %>% rename(Internet_usage = weighted_avg), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data early adopters", color = "#1F78B4") %>%
hc_add_series(data = late_adopters %>% rename(Internet_usage = weighted_avg) %>% filter(Year <= 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Observed Data late adopters", color = "#1F78B4") %>%
# Datos pronosticados (línea punteada)
hc_add_series(data = early_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast -  early adopters", dashStyle = "Dash", color = "#E31A1C") %>%
hc_add_series(data = late_pred %>% filter(Year > 2023), type = "line", hcaes(x = Year, y = Internet_usage),
name = "Forecast - late adopters", dashStyle = "Dash", color = "#E31A1C") %>%
# # Línea vertical donde empieza el pronóstico
# hc_add_series(data = list(list(x = min(forecast_df$Year), y = 0),
#                           list(x = min(forecast_df$Year), y = 100)),
#               type = "line", name = "Forecast Start", color = "black", dashStyle = "Dot",
#               enableMouseTracking = FALSE, marker = list(enabled = FALSE)) %>%
# Punto verde en el primer año donde se alcanza el 100%
hc_add_series(data = list(list(x = early_pred_marker_point$Year, y = early_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access - early adopters", color = "green",
marker = list(symbol = "circle", radius = 6)) %>%
hc_add_series(data = list(list(x = late_pred_marker_point$Year, y = late_pred_marker_point$Internet_usage)),
type = "scatter", name = "100% Internet Access - late adopters", color = "darkgreen",
marker = list(symbol = "circle", radius = 6))
